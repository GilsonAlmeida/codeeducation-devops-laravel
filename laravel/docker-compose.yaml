version: "3"
services: 
  app: 
    build: .
    container_name: app        
    entrypoint: dockerize -template  ./.docker/app/.env:.env -wait tcp://db:3306 -timeout 20s ./.docker/entrypoint.sh
    environment: 
      - DB_HOST=db
      - DB_DATABASE=laraval
      - DB_USERNAME=root
      - DB_PASSWORD=root     

    volumes: 
      - .:/var/www
    networks:
      - app-network     
    depends_on: 
      - db
      - redis  
  nginx:
     build: .docker/nginx
     container_name: nginx     
     #entrypoint: dockerize -template  ./.docker/nginx/nginx.conf:/etc/nginx/conf.d/nginx.conf  -wait 40s tcp://app:9000 nginx
     entrypoint: dockerize -template /etc/nginx/conf.d/nginx.conf:/etc/nginx/conf.d/nginx.conf -wait tcp://app:9000 -timeout 40s -wait-retry-interval 5s nginx
     command: -g "daemon off;" -c /etc/nginx/nginx.conf
     restart: always
     tty: true
     environment: 
      - NGINX_HOST=app
      - NGINX_PORT=9000
     
     ports: 
       - "8000:80"
     volumes: 
        - .:/var/www
     networks:
       - app-network   
     depends_on: 
       - app 
  db:
    image: mysql:5.7
    command: --innodb-use-native-aio=0
    container_name: db
    restart: always
    tty: true
    ports:
      - "3306:3306"
    volumes:
       - ./.docker/dbdata:/var/lib/mysql
    environment:
        - MYSQL_DATABASE=laravel
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_USER=root
    networks:
       - app-network   
  redis:
     image: redis:alpine
     expose: 
         - 6379
     networks:
      - app-network    
networks: 
    app-network:
        driver: bridge

